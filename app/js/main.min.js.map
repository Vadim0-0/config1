{"version":3,"sources":["main.js"],"names":["document","addEventListener","window","innerWidth","let","currentScroll","scrollY","pageYOffset","targetScroll","isScrolling","smoothScroll","diff","Math","abs","speed","max","min","scrollTo","requestAnimationFrame","e","preventDefault","passive","deltaY","body","scrollHeight","innerHeight","touchStartY","touches","clientY","touchY","touchDiff","firstBlock","getElementById","isAnimating","classList","add","setTimeout","remove","image","querySelector","imageContainer","handleScroll","scrollPosition","containerTop","offsetTop","containerHeight","offsetHeight","windowHeight","scrollStart","progress","easedProgress","t","pow","translateY","style","transform","sponsorItems","querySelectorAll","length","forEach","block","rect","getBoundingClientRect","x","clientX","left","centerX","width","centerY","height","top"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n  if (window.innerWidth >= 1024) {\n    // Переменные для управления скроллингом\n    let currentScroll = window.scrollY || window.pageYOffset;\n    let targetScroll = currentScroll;\n    let scrollOffset = 0;\n    let scrollEasing = 0.04; // Коэффициент плавности (чем меньше, тем плавнее)\n    let isScrolling = false;\n\n    // Обработчик событий скролла\n    window.addEventListener('scroll', function(e) {\n        // Отменяем стандартное поведение скролла\n        e.preventDefault();\n    }, { passive: false });\n\n    // Функция плавного скроллинга\n    function smoothScroll() {\n        // Вычисляем разницу между текущей и целевой позицией\n        let diff = targetScroll - currentScroll;\n\n        // Если разница достаточно большая, продолжаем анимацию\n        if (Math.abs(diff) > 0.5) {\n            isScrolling = true;\n\n            // Применяем эффект инерции - чем больше скорость, тем больше \"разгон\"\n            let speed = diff * scrollEasing;\n            currentScroll += speed;\n\n            // Ограничиваем максимальную скорость для плавности\n            speed = Math.max(Math.min(speed, 30), -30);\n            currentScroll += speed;\n\n            window.scrollTo(0, currentScroll);\n            requestAnimationFrame(smoothScroll);\n        } else {\n            isScrolling = false;\n            currentScroll = targetScroll;\n            window.scrollTo(0, currentScroll);\n        }\n    }\n\n    // Обработчик колеса мыши/тачпада\n    window.addEventListener('wheel', function(e) {\n        // Обновляем целевую позицию скролла\n        targetScroll += e.deltaY;\n\n        // Ограничиваем скролл в пределах страницы\n        targetScroll = Math.max(0, Math.min(targetScroll, document.body.scrollHeight - window.innerHeight));\n\n        // Если анимация не запущена, запускаем\n        if (!isScrolling) {\n            requestAnimationFrame(smoothScroll);\n        }\n\n        // Предотвращаем стандартное поведение скролла\n        e.preventDefault();\n    }, { passive: false });\n\n    // Обработчик касаний для мобильных устройств\n    let touchStartY = 0;\n    window.addEventListener('touchstart', function(e) {\n        touchStartY = e.touches[0].clientY;\n    }, { passive: false });\n\n    window.addEventListener('touchmove', function(e) {\n        let touchY = e.touches[0].clientY;\n        let touchDiff = touchStartY - touchY;\n\n        // Обновляем целевую позицию с учетом скорости касания\n        targetScroll += touchDiff * 2;\n        targetScroll = Math.max(0, Math.min(targetScroll, document.body.scrollHeight - window.innerHeight));\n\n        if (!isScrolling) {\n            requestAnimationFrame(smoothScroll);\n        }\n\n        touchStartY = touchY;\n        e.preventDefault();\n    }, { passive: false });\n  }\n});\n\n// hero - Анимация logo\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('firstBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 3500);\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('secondBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 5000);\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('threedBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 3000);\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('fourthBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 2000);\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('fifthBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 4000);\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const firstBlock = document.getElementById('sixthBlock');\n  if (!firstBlock) return;\n\n  let isAnimating = false; // Флаг, чтобы избежать повторных запусков\n\n  firstBlock.addEventListener('mouseenter', () => {\n    if (isAnimating) return; // Если анимация уже идёт — игнорируем\n\n    isAnimating = true;\n    firstBlock.classList.add('animate');\n\n    setTimeout(() => {\n      firstBlock.classList.remove('animate');\n      isAnimating = false; // Разблокируем анимацию после завершения\n    }, 3000);\n  });\n});\n\n// hero - скольжение изображения\ndocument.addEventListener('DOMContentLoaded', function() {\n  const image = document.querySelector('.main-hero__img');\n  const imageContainer = document.querySelector('.main-hero__img');\n\n  function handleScroll() {\n    const scrollPosition = window.scrollY;\n    const containerTop = imageContainer.offsetTop;\n    const containerHeight = imageContainer.offsetHeight;\n    const windowHeight = window.innerHeight;\n    const imageHeight = image.offsetHeight;\n\n    // Начало и конец анимации\n    const scrollStart = containerTop - windowHeight;\n    const scrollEnd = containerTop + containerHeight;\n\n    // Прогресс скролла от 0 до 1\n    let progress = (scrollPosition - scrollStart) / (scrollEnd - scrollStart);\n    progress = Math.min(1, Math.max(0, progress));\n\n    // Плавное замедление\n    const easedProgress = easeInOutCubic(progress);\n\n    // Начальное и конечное смещение в пикселях\n    const startOffset = 100; // Начальное смещение\n    const endOffset = -200;   // Конечное смещение\n\n    // Вычисляем текущее смещение\n    const translateY = startOffset + (endOffset - startOffset) * easedProgress;\n    image.style.transform = `translateY(${translateY}px)`;\n  }\n\n  // Функция плавности\n  function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\n  }\n\n  // Оптимизированный скролл\n  window.addEventListener('scroll', function() {\n    requestAnimationFrame(handleScroll);\n  });\n\n  // Инициализация\n  handleScroll();\n});\n\n// sponsors - Увеличение блоков\ndocument.addEventListener('DOMContentLoaded', function() {\n  const sponsorItems = document.querySelectorAll('.sponsors-list__item');\n\n  if (sponsorItems.length === 0) return;\n\n  sponsorItems.forEach(block => {\n    block.addEventListener('mousemove', (e) => {\n      const rect = block.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      // 3D эффект наклона\n      const centerX = rect.width / 2;\n      const centerY = rect.height / 2;\n      const relX = (x - centerX) / centerX;\n      const relY = (y - centerY) / centerY;\n\n      block.style.transform = `\n        perspective(500px)\n        rotateX(${-relY * 10}deg)\n        rotateY(${relX * 10}deg)\n        scale(1.05)\n      `;\n    });\n\n    block.addEventListener('mouseleave', () => {\n      block.style.transform = `\n        perspective(500px)\n        rotateX(0)\n        rotateY(0)\n        scale(1)\n      `;\n    });\n  });\n});\n"]}